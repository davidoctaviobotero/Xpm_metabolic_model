library(NOISeq)
setwd("Desktop/Data/RNA-Seq-Andrés/Analysis/")
counts_def <- read.table("Xam_RNA-seq_Counts-rpfCGH_sort.txt", header = TRUE, row.names = 1)
counts_def <- read.table("Xam_RNA-seq_Counts-rpfCGH-sort.txt", header = TRUE, row.names = 1)
counts_def <- read.table("Xam_RNA-seq_Counts-rpfCGH-sort.txt", header = TRUE)
library(tibble)
rownames_to_column(Xam_count_def, var="Gene_ID")
Xam_count_def <- counts_def[!duplicated(counts_def$Gene_ID),]
rm('counts_def')
rownames_to_column(Xam_count_def, var="Gene_ID")
Xam_count_def_2 <- cbind(Row.Names = rownames(Xam_count_def), Xam_count_def)
View(Xam_count_def_2)
rm(Xam_count_def_2)
View(Xam_count_def)
row.names(Xam_count_def) <- Xam_count_def[,1]
View(Xam_count_def)
Xam_count_def[,1] <- NULL
Factors_def = data.frame(Treatment = c("rpfCGH", "Void"))
Data_def <- readData(data = Xam_count_def, factors = Factors_def)
Factors_def = data.frame(Treatment = c("rpfCGH", "rpfCGH", "Void", "Void"))
Data_def <- readData(data = Xam_count_def, factors = Factors_def)
Data_def <- readData(data = Xam_count_def, factors = Factors_def)
View(Data_def)
?noiseqbio
Results_def <- noiseq(Data_def, factor = "Treatment", k = NULL, norm = "n", pnr = 0.2, nss = 8, v = 0.02, lc = 1, replicates = "no")
View(Results_def)
head(Results_def@results[[1]])
Results_def@results[[1]prob]
Results_def@results[[1]$prob]
Results_def@results[[1]]$prob
NOISeqBIO_rpfCGH@results[[1]]
Results_def@results[[1]]
NOISeqBIO_rpfCGH_result = Results_def@results[[1]]
View(NOISeqBIO_rpfCGH_result)
Xam_rpfCGH_Up = degenes(Results_def, q = 0.95, M = "up")
Xam_rpfCGH_Down = degenes(Results_def, q = 0.95, M = "down")
save.image("~/Desktop/Data/RNA-Seq-Andrés/Analysis/Xam_NOISeqSim_analysis_deftone.RData")
savehistory("~/Desktop/Data/RNA-Seq-Andrés/Analysis/Xam_NOISeqSim_Ver200.Rhistory
")
